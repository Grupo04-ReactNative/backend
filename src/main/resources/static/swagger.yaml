openapi: 3.1.0
info:
  title: API para o backend do projeto final de react native
  summary: Backend para o projeto conectando o chat gpt com outra apis de interessas
  description: |
    Descrever iso depois
  termsOfService: https://group4.com/terms/
  contact:
    name: API Support
    url: https://www.group4.com/support
    email: support@group4.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'

servers:
  - url: http://localhost:8080/
    description: The local development API server

paths:

  /personalidade-pokemon:
    get:
      summary: Gera uma personalidade-pokemon aleatoriamente para o usuario.
      description: |
        Retorna um objeto contendo
        as imagens do pokemon, o nome e uma string sobre a personalidade do usuário 
        baseada nos flavor text do pokemon de primeira geração selecionado de modo aleatório
      operationId: getPersonalidadePokemon
      tags:
        - Gera uma personalidade pokemon de primeira geração aleatória
      responses:
        '200':
          description: Personalidade Pokemon gerada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonDTO'
        '400':
          $ref: '#/components/responses/IllegalInput'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GeneralError'
  /personalidade:
    post:
      summary: Gera uma frase sobre a personalidade da pessoa a partir do nome e descrição de um Pokemon
      operationId: gerarFrase
      tags:
        - Gera uma frase sobre a personalidade-pokemon do usuário
      requestBody:
        description: |
          Um GPTRequestBody contendo:
          o systemPromptNum [ 0 ] para gerar uma frase sobre a personalidade do usuário.
          a userMessagePrompt contendo o nome de um pokemon e a descrição oriunda de todos os flavor_text
          da species na pokeapi: conferir: https://pokeapi.co/api/v2/pokemon-species/1/ 

        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPTRequestBody'
      responses:
        '201':
          description: Frase gerada com sucesso
          content:
            application/json:
              schema:
                type: string
                items:
                  type: string
              example: "Vc é um pikachu"
        '400':
            $ref: '#/components/responses/IllegalInput'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GeneralError'
  /pokemon:
    get:
      summary: Pega um pokemon e as informações de interesse que a api extrai da PokeAPI
      description: |
        Retorna um objeto contendo 
        as imagens do pokemon, o nome e uma string contendo todos os flavor texts da espécie
      operationId: getPokemon
      tags:
        - Pega um pokemon da api de pokemons
      responses:
        '200':
          description: Pokemón encontrado com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokemonDTO'
        '400':
          $ref: '#/components/responses/IllegalInput'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/GeneralError'

components:
  schemas:
    PersonalidadePokemonDTO:
      type: object
      properties:
        sprites:
          type: array
          item: string
        name:
          type: string
        frasePersonalidade:
          type: string

    GPTRequestBody:
      type: object
      properties:
        userMessagePrompt:
          type: string
        systemPromptNum:
          type:  integer
    PokemonDTO:
      type: object
      properties:
        nome:
          type: string
        sprites:
          type: array
          item: string
        speciesFlavorText:
          type: string
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  
  responses:
    IllegalInput:
      description: Illegal input for operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
    GeneralError:
      description: General error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
